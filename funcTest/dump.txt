//Gotest.go
// go assembler uses a bunch of pseudo registers for some awful reason 

main_main_pc0:
        TEXT    main.main(SB), ABIInternal, $128-0
        CMPQ    SP, 16(R14)
        PCDATA  $0, $-2
        JLS     main_main_pc390
        PCDATA  $0, $-1
        ADDQ    $-128, SP
        MOVQ    BP, 120(SP)
        LEAQ    120(SP), BP
        FUNCDATA        $0, gclocals·D1/YcbyNumM1nqYyoY4wEQ==(SB)
        FUNCDATA        $1, gclocals·hVk6lzLDCH2X8wnNw8l49Q==(SB)
        FUNCDATA        $2, main.main.stkobj(SB)
        MOVQ    os.Args(SB), DX
        CMPQ    os.Args+8(SB), $2
        JGE     main_main_pc113
        MOVUPS  X15, main..autotmp_26+72(SP)
        LEAQ    type.string(SB), DX
        MOVQ    DX, main..autotmp_26+72(SP)
        LEAQ    main..stmp_0(SB), DX
        MOVQ    DX, main..autotmp_26+80(SP)
        NOP
        MOVQ    os.Stdout(SB), BX
        LEAQ    go.itab.*os.File,io.Writer(SB), AX
        LEAQ    main..autotmp_26+72(SP), CX
        MOVL    $1, DI
        MOVQ    DI, SI
        PCDATA  $1, $0
        CALL    fmt.Fprintln(SB)
        MOVQ    120(SP), BP
        SUBQ    $-128, SP
        RET
main_main_pc113:
        PCDATA  $1, $-1
        NOP
        MOVQ    16(DX), AX
        MOVQ    24(DX), BX
        PCDATA  $1, $0
        CALL    os.ReadFile(SB)
        NOP
        TESTQ   DI, DI
        JNE     main_main_pc216
        MOVUPS  X15, main..autotmp_34+56(SP)
        MOVQ    BX, CX
        MOVQ    AX, BX
        XORL    AX, AX
        PCDATA  $1, $1
        CALL    runtime.slicebytetostring(SB)
        CALL    runtime.convTstring(SB)
        LEAQ    type.string(SB), DX
        MOVQ    DX, main..autotmp_34+56(SP)
        MOVQ    AX, main..autotmp_34+64(SP)
        NOP
        MOVQ    os.Stdout(SB), BX
        LEAQ    go.itab.*os.File,io.Writer(SB), AX
        LEAQ    main..autotmp_34+56(SP), CX
        MOVL    $1, DI
        MOVQ    DI, SI
        PCDATA  $1, $0
        CALL    fmt.Fprintln(SB)
        MOVQ    120(SP), BP
        SUBQ    $-128, SP
        RET
